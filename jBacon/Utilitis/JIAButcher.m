//
//  JIAButcher.m
//  jBacon
//
//  Created by Developer iOS on 01.12.2014.
//  Copyright (c) 2014 Developer iOS. All rights reserved.
//

#import "JIAButcher.h"

static NSString *const kKeyForName = @"JIAButcher_name";
static NSString *const kKeyForUUID = @"JIAButcher_uuid";

@implementation JIAButcher

- (instancetype)initWithUUID:(NSString *)uuid
                        name:(NSString *)name
{
    self = [super init];
    if (self) {
        _name = [name copy];
        _uuid = [uuid copy];
    }
    return self;
}

- (void)encodeWithCoder:(NSCoder *)aCoder
{
    [aCoder encodeObject:self.name
                  forKey:kKeyForName];
    
    [aCoder encodeObject:self.uuid
                  forKey:kKeyForUUID];
}

- (id)initWithCoder:(NSCoder *)aDecoder
{
    self = [self initWithUUID:[aDecoder decodeObjectForKey:kKeyForUUID]
                         name:[aDecoder decodeObjectForKey:kKeyForName]];

    return self;
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"%@,\nname: %@\nuuid: %@", [super description], self.name, self.uuid];
}

// Autogenerated code.

- (BOOL)isEqual:(id)other {
    if (other == self)
        return YES;
    if (!other || ![[other class] isEqual:[self class]])
        return NO;

    return [self isEqualToButcher:other];
}

- (BOOL)isEqualToButcher:(JIAButcher *)butcher {
    if (self == butcher)
        return YES;
    if (butcher == nil)
        return NO;
    if (self.name != butcher.name && ![self.name isEqualToString:butcher.name])
        return NO;
    if (self.uuid != butcher.uuid && ![self.uuid isEqualToString:butcher.uuid])
        return NO;
    return YES;
}

- (NSUInteger)hash {
    NSUInteger hash = [self.name hash];
    hash = hash * 31u + [self.uuid hash];
    return hash;
}


@end
